@page "/character"
@inject ContextService context;
@implements IDisposable;
<PageTitle>Player</PageTitle>

<Modal @ref="Modal">
	@if(ShowClasses)
	{
		<Class />
	}
	else if (ShowBackground)
	{
		<Background />
	}
	else if (ShowRace)
	{
		<Race />
	}
	else if (ShowScores)
	{
		<ScoresFeats />
	}
</Modal>

@if(context.Loading is not null)
{
	<div>
		<progress max="@context.Steps" value="@context.Loaded"/>
		Loading <span>@context.Loading</span>
	</div>
}

@if(context.Context.Player is not null)
{
	<div class="container-xxl">
		<div class="row border border-2 border-primary rounded p-3 gx-0 gy-1">
			<div class="col-lg-4">
				<ClassesInfo CssClass="border-bottom border-secondary cursor-pointer" OnClick="OpenClasses" />
				<div class="p-0 text-lg-center mt-0 fs--2">Class and Levels</div>
				<EditField CssClass="border-bottom border-secondary m-0" Expression="@((p)=>p.Alignment)" Placeholder="Alignment" Title="Alignment"/>
				<div class="p-0 text-lg-center mt-0 fs--2">Alignment</div>
				<RaceInfo CssClass="border-bottom border-secondary m-0 cursor-pointer" OnClick="OpenRace" />
				<div class="p-0 text-lg-center mt-0 fs--2">Race</div>
			</div>
			<div class="col-lg-4 align-self-end">
				<EditField CssClass="border-bottom border-secondary m-0 fw-bolder text-lg-center" Expression="@((p)=>p.Name)" Placeholder="Name" Title="Name" />
				<div class="p-0 text-lg-center mt-0 fs--2">Name</div>
			</div>
			<div class="col-lg-4">
				<BackgroundInfo CssClass="border-bottom border-secondary m-0 text-lg-end cursor-pointer" OnClick="OpenBackground" />
				<div class="p-0 text-lg-center mt-0 fs--2">Background</div>
				<EditField CssClass="border-bottom border-secondary m-0 text-lg-end" Expression="@((p)=>p.PlayerName)" Placeholder="Player Name" Title="Player Name" />
				<div class="p-0 text-lg-center mt-0 fs--2">Player</div>
				<XPInfo CssClass="border-bottom border-secondary m-0 text-lg-end" />
				<div class="p-0 text-lg-center mt-0 fs--2">@(context.Context.Player.Advancement ? "AP" : "XP")</div>
			</div>
		</div>
		<div class="row">
			<div class="col-lg-6 col-xl-4 gy-1">
				<div class="row g-0">
					<Scores OnClick="OpenScores" AbilityScores="Scores" CssClass="col-5" BoxCssClass="border border-2 border-primary rounded p-0 text-center mb-1" NameCssClass="border-bottom border-2 border-primary p-0 fs--2 cursor-pointer" ModCssClass="fs-1" ScoreCssClass="border-top border-2 border-primary fs-4" />
					<div class="col-7">
						<div class="row g-0">
							<div class="col-6 g-0">
								<div class="row g-0 border border-2 border-primary rounded text-center ms-1 aspect-1">
									<Inspiration CssClass="fs-1 align-self-end" CheckCssClass="bi-check-lg" UncheckCssClass="bi-check-lg text-white" />	
									<div class="border-top border-2 border-primary align-self-end fs--2" title="Inspiration">
										Insp.
									</div>
								</div>
							</div>
							<div class="col-6 g-0">
								<div class="row g-0 border border-2 border-primary rounded text-center ms-1 aspect-1">
									<ProficiencyInfo CssClass="fs-1 align-self-end" Scores="Scores" Features="Features" Possessions="Possessions" EventMask="ChangeType.None"/>
									<div class="border-top border-2 border-primary align-self-end fs--2" title="Proficiency">
										Prof.
									</div>
								</div>
							</div>
						</div>
						<div class="border border-2 border-primary rounded ms-1 mt-1 fs--1">
							<Saves LineCssClass="border-bottom border-1 border-secondary mx-1" Scores="Scores" Features="Features" Possessions="Possessions" EventMask="ChangeType.None"/>
							<div class="p-0 text-center fs--2 mt-0">Saves</div>
						</div>
						
						<div class="border border-2 border-primary rounded ms-1 mt-1 fs--1">
							<Skills LineCssClass="border-bottom border-1 border-secondary mx-1" ScoreCssClass="text-muted" Scores="Scores" Features="Features" Possessions="Possessions" EventMask="ChangeType.None" />
							<div class="p-0 text-center fs--2 mt-0">Skills</div>
						</div>
						<div class="border border-2 border-primary rounded ms-1 mt-1 fs--1">
							<Conditions />
							<div class="p-0 text-center fs--2 mt-0">Conditions</div>
						</div>
					</div>
				</div>
				<PassiveInfo CssClass="border border-2 border-primary rounded mt-1 px-2" Skill="@context.Context.GetSkill("Perception", null)" Scores="Scores" Features="Features" Possessions="Possessions" EventMask="ChangeType.None">Passive Perception</PassiveInfo>
				<Stats CssClass="border border-2 border-primary rounded mt-1 px-2" Features="Features" EventMask="ChangeType.None"/>
				<div class="border border-2 border-primary rounded mt-1 px-1">
					<div class="border-bottom border-1 border-secondary">
						<LanguageInfo CssClass="m-0 p-0" Features="Features" EventMask="ChangeType.None"/>
						<ToolProficiencyInfo CssClass="m-0 p-0" Features="Features" EventMask="ChangeType.None" />
						<OtherProficiencyInfo CssClass="m-0 p-0" Features="Features" EventMask="ChangeType.None" />
					</div>
					<div class="p-0 text-center mt-0 fs--2">Other Proficiencies & Languages</div>
				</div>
			</div>
			<div class="col-lg-6 col-xl-4 gy-1">
				<div class="row">
					<div class="col-4">
						<div class="row g-0 border border-2 border-primary rounded text-center aspect-1">
							<ACInfo CssClass="fs-1 align-self-end" Scores="Scores" Features="Features" Possessions="Possessions" EventMask="ChangeType.None" />
							<div class="border-top border-2 border-primary align-self-end fs--2" title="Armor Class">
								AC
							</div>
						</div>
					</div>
					<div class="col-4">
						<div class="row g-0 border border-2 border-primary rounded text-center aspect-1">
							<InitiativeInfo CssClass="fs-1 align-self-end" Scores="Scores" Features="Features" Possessions="Possessions" EventMask="ChangeType.None" />
							<div class="border-top border-2 border-primary align-self-end fs--2" title="Initiative">
								Init.
							</div>
						</div>
					</div>
					<div class="col-4">
						<div class="row g-0 border border-2 border-primary rounded text-center aspect-1">
							<SpeedInfo CssClass="fs-1 align-self-end" Scores="Scores" Features="Features" Possessions="Possessions" EventMask="ChangeType.None" />
							<div class="border-top border-2 border-primary align-self-end fs--2" title="Waling Speed">
								Speed
							</div>
						</div>
					</div>
				</div>
				<div class="border border-2 border-primary rounded px-1 mt-1 row g-0">
					<div class="row g-0 border-bottom border-1 border-secondary">
						<HitPoints CssClass="fs-2 text-end col position-relative" ReloadCssClass="btn reset bi bi-bootstrap-reboot fs--2 position-tl" Scores="Scores" Features="Features" EventMask="ChangeType.None" />
						<div class="col-auto fs-2">/</div>
						<HitPointsMax CssClass="fs-2 text-start col position-relative" ReloadCssClass="btn reset bi bi-bootstrap-reboot fs--2 position-tr" Scores="Scores" Features="Features" EventMask="ChangeType.None" />
					</div>
					<div class="p-0 text-center fs--2 mt-0 gy-0">Hitpoints</div>
				</div>
				<div class="border border-2 border-primary rounded px-1 mt-1">
					<TempHP CssClass="border-bottom border-1 border-secondary fs-2 text-center position-relative" ReloadCssClass="btn reset bi bi-bootstrap-reboot fs--2 position-tr" />
					<div class="p-0 text-center mt-0 fs--2">Temporary Hitpoints</div>
				</div>
				<div class="row gx-1 gy-0 mt-1">
					<div class="col-6">
						<div class="row g-0 border border-2 border-primary rounded text-center">
							<HitDice CssClass="fs-5 align-self-end" LineCssClass="position-relative" ReloadCssClass="btn reset bi bi-bootstrap-reboot fs--2 position-tl" />
							<div class="border-top border-2 border-primary align-self-end mt-0 fs--2" title="Hit Dice">
								Hit Dice
							</div>
						</div>
					</div>
					<div class="col-6">
						<div class="row g-0 border border-2 border-primary rounded text-center">
							<DeathSaves CssClass="align-self-end text-center" ButtonCssClass="btn bi p-0 m-0 fs-5" />
							<div class="border-top border-2 border-primary align-self-end mt-0 fs--2" title="Death Saves">
								Death Saves
							</div>
						</div>
					</div>
				</div>
				<div class="border border-2 border-primary rounded px-1 mt-1">
					<AttacksInfo CssClass="row cutoff-15 gx-1 gy-0" EventMask="ChangeType.Spells" Features="Features" Possessions="Possessions" Scores="Scores"/>
					<div class="p-0 text-center mt-0 fs--2">Attacks &amp; Spellcasting</div>
				</div>
				<div class="border border-2 border-primary rounded px-1 mt-1">
					<ResourcesInfo CssClass="row cutoff15 gx-1 gy-0" EventMask="ChangeType.None" Features="Features" Scores="Scores" />
					<div class="p-0 text-center mt-0 fs--2">Resources</div>
				</div>
				<div class="border border-2 border-primary rounded px-1 mt-1">
					<InventoryInfo Expression="(p)=>Possessions" Features="Features" ShowMoney="true" MoneyBorderCssClass="mt-1 text-end" PPElementCssClass="col-2" GPElementCssClass="col-4" SPElementCssClass="col-2" CPElementCssClass="col-2" EPElementCssClass="col-2" />
					<div class="p-0 text-center mt-0 fs--2">Inventory</div>
				</div>
			</div>
			<div class="col-lg-6 col-xl-4 gy-1">
				<div class="border border-2 border-primary rounded px-1">
					<div class="border-bottom border-1 border-secondary">
						<EditArea CssClass="m-0 p-0 lh-1" Expression="(p)=>p.PersonalityTrait" Multiline=false Placeholder="Personality Trait" Title="Personality Trait" />
						<EditArea CssClass="mt-3 lh-1 mx-0 mb-0  p-0" Expression="(p)=>p.PersonalityTrait2" Multiline=false Placeholder="2nd Personality Trait" Title="Second Personality Trait" />
					</div>
					<div class="p-0 text-center mt-0 fs--2 mb-3">Personality Trait</div>
					<div class="border-bottom border-1 border-secondary">
						<EditArea CssClass="m-0 p-0 lh-1" Expression="(p)=>p.Ideal" Multiline=false Placeholder="Ideal" Title="Ideal" />
					</div>
					<div class="p-0 text-center mt-0 fs--2 mb-3">Ideal</div>
					<div class="border-bottom border-1 border-secondary">
						<EditArea CssClass="m-0 p-0 lh-1" Expression="(p)=>p.Bond" Multiline=false Placeholder="Bond" Title="Bond" />
					</div>
					<div class="p-0 text-center mt-0 fs--2 mb-3">Bond</div>
					<div class="border-bottom border-1 border-secondary">
						<EditArea CssClass="m-0 p-0 lh-1" Expression="(p)=>p.Flaw" Multiline=false Placeholder="Flaw" Title="Flaw" />
					</div>
					<div class="p-0 text-center mt-0 fs--2">Flaw</div>
				</div>
				<div class="border border-2 border-primary rounded px-1 mt-1 pt-1">
					<FeatureInfo CssClass="border-bottom border-1 border-secondary cutoff lh-1 fs--1" Expression="(p, l)=>p.GetClassFeatures(l).Union(p.GetCommonFeaturesAndFeats(l))" />
					<div class="p-0 text-center mt-0 fs--2">Class Features</div>
				</div>
			</div>
			<div class="col-lg-6 col-xl-4 gy-1">
				<div class="border border-2 border-primary rounded px-1 pt-1 text-center">
					<EditField CssClass="text-center fs-2" Expression="@((p)=>p.Name)" Placeholder="Name" Title="Name" />
				</div>
				<div class="border border-2 border-primary rounded px-1 pt-1 text-center mt-1 aspect-1">
					<EditImage Expression="(p)=>p.Portrait" />
					<div class="p-0 text-center mt-0 fs--2">Portrait</div>
				</div>
				<div class="border border-2 border-primary rounded px-1 pt-1 mt-1">
					<div class="lh-1 cutoff fs--1">
						<EditArea Expression="(p)=>p.Backstory" CssClass="" Placeholder="Backstory" Title="Backstory" />
						<Notes Expression="()=>context.Context.Player.Journal" Event="SimpleJournal" CssClass="pb-3 notes" LineCssClass="mt-3 position-relative" />
						<ComplexNotes />
					</div>
					<div class="p-0 text-center mt-0 fs--2">Backstory</div>
				</div>
			</div>
			<div class="col-lg-12 col-xl-8 gy-1">
				<div class="border border-2 border-primary rounded px-1 pt-1">
					<div class="row">
						<div class="col-4">
							<EditIntField CssClass="border-bottom border-1 border-secondary" Expression="(p)=>p.Age"/>
							<div class="p-0 text-center mt-0 fs--2">Age</div>
						</div>
						<div class="col-4">
							<EditField CssClass="border-bottom border-1 border-secondary" Expression="(p)=>p.Height" />
							<div class="p-0 text-center mt-0 fs--2">Height</div>
						</div>
						<div class="col-4">
							<EditIntField CssClass="border-bottom border-1 border-secondary" Expression="(p)=>p.Weight" />
							<div class="p-0 text-center mt-0 fs--2">Weight</div>
						</div>
						<div class="col-4">
							<EditField CssClass="border-bottom border-1 border-secondary" Expression="(p)=>p.Eyes" />
							<div class="p-0 text-center mt-0 fs--2">Eyes</div>
						</div>
						<div class="col-4">
							<EditField CssClass="border-bottom border-1 border-secondary" Expression="(p)=>p.Skin" />
							<div class="p-0 text-center mt-0 fs--2">Skin</div>
						</div>
						<div class="col-4">
							<EditField CssClass="border-bottom border-1 border-secondary" Expression="(p)=>p.Hair" />
							<div class="p-0 text-center mt-0 fs--2">Hair</div>
						</div>
					</div>
				</div>
				<div class="border border-2 border-primary rounded px-1 pt-1 mt-1">
					<div class="border-bottom border-1 border-secondary">
						<div class="row">
							<div class="col-lg-6">
								<EditArea Expression="(p)=>p.Allies" Placeholder="Allies" Title="Allies" />
							</div>
							<div class="col-lg-6 text-center" alt="Faction Information">
								<EditField Expression="(p)=>p.FactionName" Placeholder="Faction Name" Title="Faction Name" />
								<div class="aspect-1 my-1">
									<EditImage Expression="(p)=>p.FactionImage" />
								</div>
								<EditField Expression="(p)=>p.FactionRank" Placeholder="Rank" Title="Faction Rank" />
							</div>
						</div>
					</div>
					<div class="p-0 text-center fs--2 mt-0">Allies &amp; Organizations</div>
				</div>
				<div class="border border-2 border-primary rounded px-1 pt-1 mt-1">
					<FeatureInfo CssClass="border-bottom border-1 border-secondary cutoff33 lh-1 fs--1" Expression="(p, l)=>p.GetOnlyBackgroundFeatures(l).Union(p.GetBoons(l)).Union(p.GetPossessionFeatures(l)).Union(p.GetRaceFeatures(l))" />
					<div class="p-0 text-center mt-0 fs--2">Additonal Features &amp; Traits</div>
				</div>
				<div class="border border-2 border-primary rounded px-1 mt-1">
					<InventoryInfo Expression="(p)=>p.GetItemsAndPossessions(true, true).Where(p=>p is JournalPossession and {Banked: true})" ShowMoney="false" />
					<div class="p-0 text-center mt-0 fs--2">Banked Treasure</div>
				</div>
			</div>
		</div>
	</div>
}

@code {
	private List<Possession>? Possessions { get; set; }
	private List<FeatureClass>? Features { get; set; }
	private AbilityScoreArray? Scores { get; set; }
	private AbilityScoreArray? Max { get; set; }
	private Modal? Modal { get; set; }
	private bool ShowClasses = false;
	private bool ShowBackground = false;
	private bool ShowRace = false;
	private bool ShowScores = false;

	private void LoadFeatures()
	{
		if (context.Context.Player is not null)
		{
			Possessions = context.Context.Player.GetItemsAndPossessions();
			Features = context.Context.Player.GetFeatureAndAbility(out AbilityScoreArray scores, out AbilityScoreArray max, t => true, context.Level);
			Scores = scores;
			Max = max;
		}
	}

	protected override Task OnInitializedAsync()
	{
		context.PlayerChange += StateChange;
		context.LoadEvent += StateHasChanged;
		LoadFeatures();
		return Task.CompletedTask;
	}

	private async Task StateChange(ChangeType change)
	{
		if (change.HasAnyFlag(ChangeType.Full, ChangeType.Features)) await InvokeAsync(() =>
			{
				LoadFeatures();
				StateHasChanged();
			});
	}

	private async Task OpenClasses()
	{
		if (Modal is null) return;
		ShowClasses = true;
		ShowRace = false;
		ShowBackground = false;
		ShowScores = false;
		StateHasChanged();
		await Modal.Open("Class");
	}

	private async Task OpenScores()
	{
		if (Modal is null) return;
		ShowClasses = false;
		ShowRace = false;
		ShowBackground = false;
		ShowScores = true;
		StateHasChanged();
		await Modal.Open("Ability Scores");
	}

	private async Task OpenRace()
	{
		if (Modal is null) return;
		ShowClasses = false;
		ShowRace = true;
		ShowBackground = false;
		ShowScores = false;
		StateHasChanged();
		await Modal.Open("Race");
	}

	private async Task OpenBackground()
	{
		if (Modal is null) return;
		ShowClasses = false;
		ShowRace = false;
		ShowBackground = true;
		ShowScores = false;
		StateHasChanged();
		await Modal.Open("Background");
	}

	public void Dispose() {
		context.PlayerChange -= StateChange;
		context.LoadEvent -= StateHasChanged;
	}
}
